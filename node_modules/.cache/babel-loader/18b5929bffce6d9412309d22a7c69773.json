{"ast":null,"code":"var _jsxFileName = \"/home/marek/VSCode/react-full-stack-faqs/src/components/OptionBar.js\";\nimport React from \"react\";\nimport { Navbar, Button, Badge } from \"reactstrap\";\nimport setsData from \"../data/setsData\";\nimport tagsData from \"../data/tagsData\";\nimport typesData from \"../data/typesData\";\nexport default function OptionBar(_ref) {\n  var activeTab = _ref.activeTab,\n      setActiveTab = _ref.setActiveTab;\n  var styles = {\n    getButton: function getButton(option) {\n      return {};\n    },\n    getButtonColor: function getButtonColor(option) {\n      return;\n    },\n    getBadgeColor: function getBadgeColor(option) {\n      return activeTab === option ? \"light\" : \"dark\";\n    }\n  };\n  var options = [\"Sets\", \"Types\", \"Tags\"];\n  return React.createElement(Navbar, {\n    color: \"light\",\n    light: true,\n    expand: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, options.map(function (elem) {\n    return React.createElement(Button, {\n      style: {\n        color: activeTab === elem ? \"white\" : \"black\",\n        textDecoration: \"none\"\n      },\n      color: activeTab === option ? \"dark\" : \"link\",\n      onClick: function onClick() {\n        return setActiveTab(elem);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: styles.getBadgeColor(elem),\n      className: \"m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, elem === \"Sets\" && setsData.length, elem === \"Tags\" && tagsData.length, elem === \"Types\" && typesData.length), elem);\n  }));\n}","map":{"version":3,"sources":["/home/marek/VSCode/react-full-stack-faqs/src/components/OptionBar.js"],"names":["React","Navbar","Button","Badge","setsData","tagsData","typesData","OptionBar","activeTab","setActiveTab","styles","getButton","option","getButtonColor","getBadgeColor","options","map","elem","color","textDecoration","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,YAAtC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,eAAe,SAASC,SAAT,OAAgD;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AAC7D,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAE,mBAACC,MAAD,EAAY;AACrB,aAAO,EAAP;AAGD,KALY;AAMbC,IAAAA,cAAc,EAAE,wBAACD,MAAD,EAAY;AAC1B;AACD,KARY;AASbE,IAAAA,aAAa,EAAE,uBAACF,MAAD,EAAY;AACzB,aAAOJ,SAAS,KAAKI,MAAd,GAAuB,OAAvB,GAAiC,MAAxC;AACD;AAXY,GAAf;AAaA,MAAMG,OAAO,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,MAAhB,CAAhB;AACA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,KAAK,MAA3B;AAA4B,IAAA,MAAM,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,OAAO,CAACC,GAAR,CAAY,UAAAC,IAAI;AAAA,WACf,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAEV,SAAS,KAAKS,IAAd,GAAqB,OAArB,GAA+B,OAAvC;AACLE,QAAAA,cAAc,EAAE;AADX,OADT;AAGE,MAAA,KAAK,EAAEX,SAAS,KAAKI,MAAd,GAAuB,MAAvB,GAAgC,MAHzC;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMH,YAAY,CAACQ,IAAD,CAAlB;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEP,MAAM,CAACI,aAAP,CAAqBG,IAArB,CADT;AAEE,MAAA,SAAS,EAAC,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAICA,IAAI,KAAK,MAAT,IAAmBb,QAAQ,CAACgB,MAJ7B,EAKCH,IAAI,KAAK,MAAT,IAAmBZ,QAAQ,CAACe,MAL7B,EAMCH,IAAI,KAAK,OAAT,IAAoBX,SAAS,CAACc,MAN/B,CANF,EAcGH,IAdH,CADe;AAAA,GAAhB,CADD,CADF;AAqBD","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Button, Badge } from \"reactstrap\";\r\nimport setsData from \"../data/setsData\";\r\nimport tagsData from \"../data/tagsData\";\r\nimport typesData from \"../data/typesData\";\r\n\r\nexport default function OptionBar({ activeTab, setActiveTab }) {\r\n  const styles = {\r\n    getButton: (option) => {\r\n      return {\r\n        \r\n      }\r\n    },\r\n    getButtonColor: (option) => {\r\n      return \r\n    },\r\n    getBadgeColor: (option) => {\r\n      return activeTab === option ? \"light\" : \"dark\"\r\n    }\r\n  }\r\n  const options = [\"Sets\",\"Types\",\"Tags\"]\r\n  return (\r\n    <Navbar color=\"light\" light expand=\"md\">\r\n    {options.map(elem => \r\n      <Button\r\n        style={{color: activeTab === elem ? \"white\" : \"black\",\r\n          textDecoration: \"none\"}}\r\n        color={activeTab === option ? \"dark\" : \"link\"}\r\n        onClick={() => setActiveTab(elem)}\r\n      >\r\n        <Badge\r\n          color={styles.getBadgeColor(elem)}\r\n          className=\"m-1\"\r\n        >\r\n        {elem === \"Sets\" && setsData.length}\r\n        {elem === \"Tags\" && tagsData.length}\r\n        {elem === \"Types\" && typesData.length}\r\n        </Badge>\r\n        {elem}\r\n      </Button>)}\r\n    </Navbar>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}