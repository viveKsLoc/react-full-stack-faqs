{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masautt\\\\Desktop\\\\full-stack-faqs\\\\react-full-stack-faqs\\\\src\\\\components\\\\DisplayCard.js\";\nimport React from \"react\";\nimport { Card, CardBody, CardTitle, CardText, Tooltip } from \"reactstrap\";\nimport Gist from \"react-gist\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fab, faYoutube, faQuora, faStackOverflow, faFreeCodeCamp, faGithub, faFirefox, faMedium } from '@fortawesome/free-brands-svg-icons';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport tagsData from \"../data/tagsData\";\nimport \"../styles.css\";\nexport default function SetCard(_ref) {\n  var content = _ref.content;\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\",\n      marginRight: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    // href={`https://8snib.sse.codesandbox.io/faq/${content.id}`}\n    style: {\n      color: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, content.question))), content.type === \"code\" ? React.createElement(Gist, {\n    id: content.answer.slice(-32),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, content.answer), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, content.tags.map(function (tag) {\n    return React.createElement(\"a\", {\n      // href={`https://8snib.sse.codesandbox.io/tag/${tag}`}\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, tagsData.find(function (tagData) {\n      return tagData.id === tag;\n    }) === undefined ? \"\" : tagsData.find(function (tagData) {\n      return tagData.id === tag;\n    }).emoji, \" \", tag, \" \"));\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), content.sources.map(function (source) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, source.site === \"youtube\" && React.createElement(FontAwesomeIcon, {\n      icon: faYoutube,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), source.site === \"quora\" && React.createElement(FontAwesomeIcon, {\n      icon: faQuora,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), source.site === \"stack-overflow\" && React.createElement(FontAwesomeIcon, {\n      icon: faStackOverflow,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), source.site === \"free-code-camp\" && React.createElement(FontAwesomeIcon, {\n      icon: faFreeCodeCamp,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), source.site === \"globe\" && React.createElement(FontAwesomeIcon, {\n      icon: faGlobe,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), source.site === \"firefox\" && React.createElement(FontAwesomeIcon, {\n      icon: faFirefox,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), source.site === \"github\" && React.createElement(FontAwesomeIcon, {\n      icon: faGithub,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), source.site === \"medium\" && React.createElement(FontAwesomeIcon, {\n      icon: faMedium,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: source.url,\n      class: \"text-dark m-1\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", source.name));\n  })))));\n}","map":{"version":3,"sources":["C:\\Users\\masautt\\Desktop\\full-stack-faqs\\react-full-stack-faqs\\src\\components\\DisplayCard.js"],"names":["React","Card","CardBody","CardTitle","CardText","Tooltip","Gist","FontAwesomeIcon","fab","faYoutube","faQuora","faStackOverflow","faFreeCodeCamp","faGithub","faFirefox","faMedium","faGlobe","tagsData","SetCard","content","marginTop","marginRight","color","question","type","answer","slice","tags","map","tag","find","tagData","id","undefined","emoji","sources","source","site","url","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText, Tooltip } from \"reactstrap\";\r\nimport Gist from \"react-gist\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fab, faYoutube, faQuora, faStackOverflow, faFreeCodeCamp, faGithub, faFirefox, faMedium } from '@fortawesome/free-brands-svg-icons'\r\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\r\nimport tagsData from \"../data/tagsData\";\r\n\r\nimport \"../styles.css\";\r\n\r\nexport default function SetCard({ content }) {\r\n  return (\r\n    <div style={{marginTop: \"1rem\", marginRight: \"1rem\"}}>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>\r\n            <a\r\n              // href={`https://8snib.sse.codesandbox.io/faq/${content.id}`}\r\n              style={{ color: \"black\" }}\r\n            >\r\n              <b>{content.question}</b>\r\n            </a>\r\n          </CardTitle>\r\n          {content.type === \"code\" ? (\r\n            <Gist id={content.answer.slice(-32)} />\r\n          ) : (\r\n              <CardText>{content.answer}</CardText>\r\n            )}\r\n\r\n          <CardText>\r\n            {content.tags.map(tag => (\r\n              <a\r\n                // href={`https://8snib.sse.codesandbox.io/tag/${tag}`}\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <b>\r\n                  {tagsData.find(tagData => tagData.id === tag) === undefined\r\n                    ? \"\"\r\n                    : tagsData.find(tagData => tagData.id === tag).emoji}{\" \"}\r\n                  {tag}{\" \"}\r\n                </b>\r\n              </a>\r\n            ))}\r\n            <hr></hr>\r\n            {content.sources.map(source => (\r\n              <div>\r\n                {source.site === \"youtube\" && <FontAwesomeIcon icon={faYoutube} size=\"lg\" />}\r\n                {source.site === \"quora\" && <FontAwesomeIcon icon={faQuora} size=\"lg\" />}\r\n                {source.site === \"stack-overflow\" && <FontAwesomeIcon icon={faStackOverflow} size=\"lg\" />}\r\n                {source.site === \"free-code-camp\" && <FontAwesomeIcon icon={faFreeCodeCamp} size=\"lg\" />}\r\n                {source.site === \"globe\" && <FontAwesomeIcon icon={faGlobe} size=\"lg\" />}\r\n                {source.site === \"firefox\" && <FontAwesomeIcon icon={faFirefox} size=\"lg\" />}\r\n                {source.site === \"github\" && <FontAwesomeIcon icon={faGithub} size=\"lg\" />}\r\n                {source.site === \"medium\" && <FontAwesomeIcon icon={faMedium} size=\"lg\" />}\r\n                <a href={source.url} class=\"text-dark m-1\" target=\"_blank\">\r\n                  {\" \"}\r\n                  {source.name}\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </CardText>\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}