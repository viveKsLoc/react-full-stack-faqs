{"ast":null,"code":"var _jsxFileName = \"/home/marek/VSCode/full-stack-faqs-front-end/src/components/DisplayCard.js\";\nimport React from \"react\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport Gist from \"react-gist\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fab, faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport tagsData from \"../data/tags\";\nimport \"../styles.css\";\nexport default function SetCard(_ref) {\n  var content = _ref.content;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://8snib.sse.codesandbox.io/faq/\".concat(content.id),\n    style: {\n      color: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, content.question))), content.type === \"Code\" ? React.createElement(Gist, {\n    id: content.answer.slice(-32),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, content.answer), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, content.tags.map(function (tag) {\n    return React.createElement(\"a\", {\n      href: \"https://8snib.sse.codesandbox.io/tag/\".concat(tag),\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, tagsData.find(function (tagData) {\n      return tagData.id === tag;\n    }) === undefined ? \"\" : tagsData.find(function (tagData) {\n      return tagData.id === tag;\n    }).emoji, \" \", tag, \" \"));\n  }), content.sources.map(function (source) {\n    return React.createElement(\"a\", {\n      href: source.url,\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, console.log(\"Tests\"), \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"youtube\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), \" \");\n  })))));\n}","map":{"version":3,"sources":["/home/marek/VSCode/full-stack-faqs-front-end/src/components/DisplayCard.js"],"names":["React","Card","CardBody","CardTitle","CardText","Gist","FontAwesomeIcon","fab","faYoutube","tagsData","SetCard","content","id","color","question","type","answer","slice","tags","map","tag","find","tagData","undefined","emoji","sources","source","url","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,YAApD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oCAA/B;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,OAAO,eAAP;AAEA,eAAe,SAASC,OAAT,OAA8B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC3C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,iDAA0CA,OAAO,CAACC,EAAlD,CADN;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,OAAO,CAACG,QAAZ,CAJF,CADF,CADF,EASGH,OAAO,CAACI,IAAR,KAAiB,MAAjB,GACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEJ,OAAO,CAACK,MAAR,CAAeC,KAAf,CAAqB,CAAC,EAAtB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWN,OAAO,CAACK,MAAnB,CAZJ,EAeE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACO,IAAR,CAAaC,GAAb,CAAiB,UAAAC,GAAG;AAAA,WACnB;AACE,MAAA,IAAI,iDAA0CA,GAA1C,CADN;AAEE,MAAA,KAAK,EAAE;AAAEP,QAAAA,KAAK,EAAE;AAAT,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QAAQ,CAACY,IAAT,CAAc,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACV,EAAR,KAAeQ,GAAnB;AAAA,KAArB,MAAiDG,SAAjD,GACG,EADH,GAEGd,QAAQ,CAACY,IAAT,CAAc,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACV,EAAR,KAAeQ,GAAnB;AAAA,KAArB,EAA6CI,KAHnD,EAG0D,GAH1D,EAIGJ,GAJH,EAIQ,GAJR,CAJF,CADmB;AAAA,GAApB,CADH,EAcIT,OAAO,CAACc,OAAR,CAAgBN,GAAhB,CAAoB,UAAAO,MAAM;AAAA,WACzB;AAAG,MAAA,IAAI,EAAEA,MAAM,CAACC,GAAhB;AAAqB,MAAA,KAAK,EAAE;AAACd,QAAAA,KAAK,EAAE;AAAR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCe,OAAO,CAACC,GAAR,CAAY,OAAZ,CADD,EAEA,GAFA,EAEI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,SAAtB;AAAgC,MAAA,IAAI,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAEiD,GAFjD,CADyB;AAAA,GAA1B,CAdJ,CAfF,CADF,CADF,CADF;AA4CD","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport Gist from \"react-gist\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fab, faYoutube } from '@fortawesome/free-brands-svg-icons'\r\nimport tagsData from \"../data/tags\";\r\n\r\nimport \"../styles.css\";\r\n\r\nexport default function SetCard({ content }) {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>\r\n            <a\r\n              href={`https://8snib.sse.codesandbox.io/faq/${content.id}`}\r\n              style={{ color: \"black\" }}\r\n            >\r\n              <b>{content.question}</b>\r\n            </a>\r\n          </CardTitle>\r\n          {content.type === \"Code\" ? (\r\n            <Gist id={content.answer.slice(-32)} />\r\n          ) : (\r\n            <CardText>{content.answer}</CardText>\r\n          )}\r\n\r\n          <CardText>\r\n            {content.tags.map(tag => (\r\n              <a\r\n                href={`https://8snib.sse.codesandbox.io/tag/${tag}`}\r\n                style={{ color: \"black\" }}\r\n              >\r\n                <b>\r\n                  {tagsData.find(tagData => tagData.id === tag) === undefined\r\n                    ? \"\"\r\n                    : tagsData.find(tagData => tagData.id === tag).emoji}{\" \"}\r\n                  {tag}{\" \"}\r\n                </b>\r\n              </a>\r\n            ))}\r\n             {content.sources.map(source => (\r\n               <a href={source.url} style={{color: \"black\"}}>\r\n               {console.log(\"Tests\")}\r\n              {\" \"}<FontAwesomeIcon icon=\"youtube\" size=\"lg\" />{\" \"}\r\n               </a>\r\n             ))}\r\n          </CardText>\r\n         \r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}