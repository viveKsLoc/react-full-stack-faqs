{"ast":null,"code":"import faqsData from \"../data/faqsData\";\nexport var getFaqById = function getFaqById(id) {\n  return faqsData.filter(function (faqData) {\n    return faqData.id === id;\n  })[0];\n};\nexport var getFaqByNum = function getFaqByNum(num) {\n  return faqsData.filter(function (faqData) {\n    return faqData.number === num;\n  })[0];\n};\nexport var getFaqsByType = function getFaqsByType(type) {\n  var foundFaqs = faqsData.filter(function (faqData) {\n    return faqData.type === type.toLowerCase();\n  });\n  return {\n    name: type,\n    total: foundFaqs.length,\n    faqs: foundFaqs\n  };\n};\nexport default {\n  getFaqsByNums: function getFaqsByNums(num1, num2) {\n    return faqsData.slice(num1, num2);\n  },\n  getFaqsByType: function getFaqsByType(type) {},\n  getFaqsByTag: function getFaqsByTag(tag) {\n    var foundFaqs = faqsData.filter(function (faqData) {\n      return faqData.tags.includes(tag);\n    });\n    return {\n      name: tag,\n      total: foundFaqs.length,\n      faqs: foundFaqs\n    };\n  },\n  getFaqsByTags: function getFaqsByTags(tags) {\n    var foundFaqs = faqsData.filter(function (faqData) {\n      return faqData.tags.sort().toString() === tags.sort().toString();\n    });\n    return {\n      name: tags.join(\" + \"),\n      total: foundFaqs.length,\n      faqs: foundFaqs\n    };\n  }\n};","map":{"version":3,"sources":["/home/marek/VSCode/react-full-stack-faqs/src/helpers/faqsHelper.js"],"names":["faqsData","getFaqById","id","filter","faqData","getFaqByNum","num","number","getFaqsByType","type","foundFaqs","toLowerCase","name","total","length","faqs","getFaqsByNums","num1","num2","slice","getFaqsByTag","tag","tags","includes","getFaqsByTags","sort","toString","join"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,SAAQF,QAAQ,CAACG,MAAT,CAAgB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACF,EAAR,KAAeA,EAAnB;AAAA,GAAvB,EAA8C,CAA9C,CAAR;AAAA,CAAnB;AACP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,SAASN,QAAQ,CAACG,MAAT,CAAgB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACG,MAAR,KAAmBD,GAAvB;AAAA,GAAvB,EAAmD,CAAnD,CAAT;AAAA,CAApB;AACP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACnC,MAAIC,SAAS,GAAGV,QAAQ,CAACG,MAAT,CAAgB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACK,IAAR,KAAiBA,IAAI,CAACE,WAAL,EAArB;AAAA,GAAvB,CAAhB;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEH,IADH;AAEHI,IAAAA,KAAK,EAAEH,SAAS,CAACI,MAFd;AAGHC,IAAAA,IAAI,EAAEL;AAHH,GAAP;AAKH,CAPM;AAQP,eAAe;AACXM,EAAAA,aAAa,EAAG,uBAASC,IAAT,EAAcC,IAAd,EAAoB;AAChC,WAAOlB,QAAQ,CAACmB,KAAT,CAAeF,IAAf,EAAqBC,IAArB,CAAP;AACH,GAHU;AAIXV,EAAAA,aAAa,EAAG,uBAASC,IAAT,EAAe,CAG9B,CAPU;AAQXW,EAAAA,YAAY,EAAG,sBAASC,GAAT,EAAc;AACzB,QAAIX,SAAS,GAAIV,QAAQ,CAACG,MAAT,CAAgB,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACkB,IAAR,CAAaC,QAAb,CAAsBF,GAAtB,CAAJ;AAAA,KAAvB,CAAjB;AACA,WAAO;AACHT,MAAAA,IAAI,EAAES,GADH;AAEHR,MAAAA,KAAK,EAAGH,SAAS,CAACI,MAFf;AAGHC,MAAAA,IAAI,EAAEL;AAHH,KAAP;AAKH,GAfU;AAgBXc,EAAAA,aAAa,EAAG,uBAASF,IAAT,EAAe;AAC3B,QAAIZ,SAAS,GAAGV,QAAQ,CAACG,MAAT,CAAgB,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACkB,IAAR,CAAaG,IAAb,GAAoBC,QAApB,OAAmCJ,IAAI,CAACG,IAAL,GAAYC,QAAZ,EAAvC;AAAA,KAAvB,CAAhB;AACA,WAAO;AACHd,MAAAA,IAAI,EAAEU,IAAI,CAACK,IAAL,CAAU,KAAV,CADH;AAEHd,MAAAA,KAAK,EAAEH,SAAS,CAACI,MAFd;AAGHC,MAAAA,IAAI,EAAEL;AAHH,KAAP;AAKH;AAvBU,CAAf","sourcesContent":["import faqsData from \"../data/faqsData\";\n\nexport const getFaqById = (id) => faqsData.filter(faqData => faqData.id === id)[0]\nexport const getFaqByNum = (num) => faqsData.filter(faqData => faqData.number === num)[0]\nexport const getFaqsByType = (type) => {\n    let foundFaqs = faqsData.filter(faqData => faqData.type === type.toLowerCase())\n    return {\n        name: type,\n        total: foundFaqs.length,\n        faqs: foundFaqs\n    }\n}\nexport default {\n    getFaqsByNums : function(num1,num2) {\n        return faqsData.slice(num1, num2)\n    },\n    getFaqsByType : function(type) {\n\n        \n    },\n    getFaqsByTag : function(tag) {\n        let foundFaqs =  faqsData.filter(faqData => faqData.tags.includes(tag))\n        return {\n            name: tag,\n            total : foundFaqs.length,\n            faqs: foundFaqs\n        }\n    },\n    getFaqsByTags : function(tags) {\n        let foundFaqs = faqsData.filter(faqData => faqData.tags.sort().toString() === tags.sort().toString());\n        return {\n            name: tags.join(\" + \"),\n            total: foundFaqs.length,\n            faqs: foundFaqs\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}