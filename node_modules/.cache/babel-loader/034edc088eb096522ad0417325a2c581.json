{"ast":null,"code":"var _jsxFileName = \"/home/marek/VSCode/react-full-stack-faqs/src/components/OptionCard.js\";\nimport React from \"react\";\nimport { Badge, Button } from \"reactstrap\";\nimport { getFaqsByTag, getFaqsByType } from \"../helpers/faqsHelper\";\nimport \"../styles.css\";\n\nvar cleanStr = function cleanStr(str) {\n  return str.toLowerCase().replace(/ /g, \"-\").replace(/\\./g, \"-\");\n};\n\nvar compStrs = function compStrs(str1, str2, attr) {\n  return cleanStr(str1[attr]) === cleanStr(str2[attr]);\n};\n\nexport default function OptionCard(_ref) {\n  var content = _ref.content,\n      clickHandler = _ref.clickHandler,\n      activeOption = _ref.activeOption,\n      activeTab = _ref.activeTab;\n  return React.createElement(Button, {\n    className: \"element p-1 m-1 border border-3-dark\",\n    onClick: function onClick() {\n      activeTab === \"Sets\" && clickHandler(content);\n      activeTab === \"Types\" && clickHandler(getFaqsByType(content.name));\n      activeTab === \"Tags\" && clickHandler(getFaqsByTag(content.id));\n    },\n    style: {\n      background: compStrs(activeOption, content, \"name\") ? \"#343a40\" : \"white\",\n      color: compStrs(activeOption, content, \"name\") ? \"white\" : \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: compStrs(activeOption, content, \"name\") ? \"light\" : \"dark\",\n    className: \"element m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, content.faqs && content.faqs.length, content.total && content.total), content.name);\n}","map":{"version":3,"sources":["/home/marek/VSCode/react-full-stack-faqs/src/components/OptionCard.js"],"names":["React","Badge","Button","getFaqsByTag","getFaqsByType","cleanStr","str","toLowerCase","replace","compStrs","str1","str2","attr","OptionCard","content","clickHandler","activeOption","activeTab","name","id","background","color","faqs","length","total"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;AACA,OAAO,eAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,SAASA,GAAG,CAACC,WAAJ,GAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,EAAqCA,OAArC,CAA6C,KAA7C,EAAoD,GAApD,CAAT;AAAA,CAAjB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAMC,IAAN,EAAWC,IAAX;AAAA,SAAoBP,QAAQ,CAACK,IAAI,CAACE,IAAD,CAAL,CAAR,KAAyBP,QAAQ,CAACM,IAAI,CAACC,IAAD,CAAL,CAArD;AAAA,CAAjB;;AACA,eAAe,SAASC,UAAT,OAAwE;AAAA,MAAlDC,OAAkD,QAAlDA,OAAkD;AAAA,MAAzCC,YAAyC,QAAzCA,YAAyC;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrF,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbA,MAAAA,SAAS,KAAK,MAAd,IAAwBF,YAAY,CAACD,OAAD,CAApC;AACAG,MAAAA,SAAS,KAAK,OAAd,IAAyBF,YAAY,CAACX,aAAa,CAACU,OAAO,CAACI,IAAT,CAAd,CAArC;AACAD,MAAAA,SAAS,KAAK,MAAd,IAAwBF,YAAY,CAACZ,YAAY,CAACW,OAAO,CAACK,EAAT,CAAb,CAApC;AACD,KANH;AAOE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEX,QAAQ,CAACO,YAAD,EAAcF,OAAd,EAAsB,MAAtB,CAAR,GAAwC,SAAxC,GAAoD,OAD3D;AAELO,MAAAA,KAAK,EAAGZ,QAAQ,CAACO,YAAD,EAAcF,OAAd,EAAsB,MAAtB,CAAR,GAAwC,OAAxC,GAAkD;AAFrD,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEL,QAAQ,CAACO,YAAD,EAAcF,OAAd,EAAsB,MAAtB,CAAR,GAAwC,OAAxC,GAAkD,MAD3D;AAEE,IAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,OAAO,CAACQ,IAAR,IAAgBR,OAAO,CAACQ,IAAR,CAAaC,MAJhC,EAKGT,OAAO,CAACU,KAAR,IAAiBV,OAAO,CAACU,KAL5B,CAZF,EAmBGV,OAAO,CAACI,IAnBX,CADF;AAuBD","sourcesContent":["import React from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport { getFaqsByTag, getFaqsByType } from \"../helpers/faqsHelper\";\r\nimport \"../styles.css\";\r\n\r\nconst cleanStr = (str) => str.toLowerCase().replace(/ /g, \"-\").replace(/\\./g, \"-\")\r\nconst compStrs = (str1,str2,attr) => cleanStr(str1[attr]) === cleanStr(str2[attr])\r\nexport default function OptionCard({ content, clickHandler, activeOption, activeTab,}) {\r\n  return (\r\n    <Button\r\n      className=\"element p-1 m-1 border border-3-dark\"\r\n      onClick={() => {\r\n        activeTab === \"Sets\" && clickHandler(content)\r\n        activeTab === \"Types\" && clickHandler(getFaqsByType(content.name))\r\n        activeTab === \"Tags\" && clickHandler(getFaqsByTag(content.id)) \r\n      }}\r\n      style={{\r\n        background: compStrs(activeOption,content,\"name\") ? \"#343a40\" : \"white\",\r\n        color:  compStrs(activeOption,content,\"name\") ? \"white\" : \"black\"\r\n      }}\r\n    >\r\n      <Badge\r\n        color={compStrs(activeOption,content,\"name\") ? \"light\" : \"dark\"}\r\n        className=\"element m-1\"\r\n      >\r\n        {content.faqs && content.faqs.length}\r\n        {content.total && content.total}\r\n      </Badge>\r\n      {content.name}\r\n    </Button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}