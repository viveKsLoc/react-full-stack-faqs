{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\msautter\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\msautter\\\\Desktop\\\\Notes\\\\react-full-stack-faqs\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport Scrollbar from \"react-scrollbars-custom\";\nimport { Container, Row, Col, TabContent, TabPane } from \"reactstrap\";\nimport OptionCard from \"./components/OptionCard\";\nimport DisplayCard from \"./components/DisplayCard\";\nimport DisplayBar from \"./components/DisplayBar\";\nimport OptionBar from \"./components/OptionBar\";\nimport TopBar from \"./components/TopBar\";\nimport setsData from \"./data/setsData\";\nimport tagsData from \"./data/tagsData\";\nimport typesData from \"./data/typesData\";\n\nvar App = function App() {\n  var _useState = useState(\"Tags\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeTab = _useState2[0],\n      setActiveTab = _useState2[1];\n\n  var _useState3 = useState(setsData[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeOption = _useState4[0],\n      setActiveOption = _useState4[1];\n\n  var options = [{\n    name: \"Sets\",\n    data: setsData\n  }, {\n    name: \"Types\",\n    data: typesData\n  }, {\n    name: \"Tags\",\n    data: tagsData\n  }];\n\n  function handleOptionClick(content) {\n    setActiveOption(content);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(TopBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Container, {\n    style: {\n      background: \"white\",\n      padding: \"0\",\n      marginTop: \"1em\"\n    },\n    className: \"rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(OptionBar, {\n    activeTab: activeTab,\n    setActiveTab: setActiveTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(TabContent, {\n    activeTab: activeTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, options.map(function (option) {\n    return React.createElement(TabPane, {\n      tabId: option.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Scrollbar, {\n      style: {\n        height: \"45rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, option.data.map(function (item) {\n      return React.createElement(OptionCard, {\n        key: item.id,\n        content: item,\n        clickHandler: handleOptionClick,\n        activeOption: activeOption,\n        activeTab: activeTab,\n        type: option.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }))));\n  }))), React.createElement(Col, {\n    xs: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(DisplayBar, {\n    activeOption: activeOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Scrollbar, {\n    style: {\n      height: \"50rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, activeOption.faqs.map(function (item) {\n    return React.createElement(DisplayCard, {\n      content: item,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\msautter\\Desktop\\Notes\\react-full-stack-faqs\\src\\App.js"],"names":["React","useState","Scrollbar","Container","Row","Col","TabContent","TabPane","OptionCard","DisplayCard","DisplayBar","OptionBar","TopBar","setsData","tagsData","typesData","App","activeTab","setActiveTab","activeOption","setActiveOption","options","name","data","handleOptionClick","content","background","padding","marginTop","map","option","height","item","id","faqs"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport { Container, Row, Col, TabContent, TabPane } from \"reactstrap\";\r\n\r\nimport OptionCard from \"./components/OptionCard\";\r\nimport DisplayCard from \"./components/DisplayCard\";\r\nimport DisplayBar from \"./components/DisplayBar\";\r\nimport OptionBar from \"./components/OptionBar\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport setsData from \"./data/setsData\";\r\nimport tagsData from \"./data/tagsData\";\r\nimport typesData from \"./data/typesData\";\r\n\r\nconst App = () => {\r\n    const [activeTab, setActiveTab] = useState(\"Tags\");\r\n    const [activeOption, setActiveOption] = useState(setsData[0]);\r\n    const options = [{name: \"Sets\", data: setsData}, {name: \"Types\", data: typesData}, {name:\"Tags\",data:tagsData}]\r\n    function handleOptionClick(content) {\r\n      setActiveOption(content);\r\n    }\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <Container\r\n          style={{ background: \"white\", padding: \"0\", marginTop: \"1em\" }}\r\n          className=\"rounded\"\r\n        >\r\n          <Row>\r\n            <Col xs=\"4\">\r\n              <OptionBar activeTab={activeTab} setActiveTab={setActiveTab} />\r\n              <TabContent activeTab={activeTab}>\r\n                  {options.map(option => \r\n                    <TabPane tabId={option.name}>\r\n                        <br></br>\r\n                        <Scrollbar style={{height: \"45rem\"}}>\r\n                            <div>\r\n                                {option.data.map(item => \r\n                                    <OptionCard\r\n                                     key={item.id}\r\n                                     content={item}\r\n                                     clickHandler={handleOptionClick}\r\n                                     activeOption={activeOption}\r\n                                     activeTab={activeTab}\r\n                                     type={option.name}\r\n                                   />\r\n                                )}\r\n                            </div>\r\n                        </Scrollbar>\r\n                    </TabPane>\r\n                    )}\r\n              </TabContent>\r\n            </Col>\r\n            <Col xs=\"8\">\r\n              <DisplayBar activeOption={activeOption}/>\r\n              <Scrollbar\r\n                style={{\r\n                  height: \"50rem\"\r\n                }}\r\n              >\r\n                {activeOption.faqs.map(item => (\r\n                  <DisplayCard content={item} key={item.id} />\r\n                ))}\r\n              </Scrollbar>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}