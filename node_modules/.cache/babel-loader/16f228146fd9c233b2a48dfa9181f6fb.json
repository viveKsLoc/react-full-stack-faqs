{"ast":null,"code":"var _jsxFileName = \"/home/marek/VSCode/react-full-stack-faqs/src/components/OptionCard.js\";\nimport React from \"react\";\nimport { Badge, Button } from \"reactstrap\";\nimport { getFaqsByTag, getFaqsByType } from \"../helpers/faqsHelper\";\nimport \"../styles.css\";\n\nvar determineSelected = function determineSelected(active, current) {\n  var isSelected = false;\n  if (active.name === current.name) isSelected = true;\n};\n\nexport default function OptionCard(_ref) {\n  var content = _ref.content,\n      clickHandler = _ref.clickHandler,\n      activeOption = _ref.activeOption,\n      activeTab = _ref.activeTab;\n  return React.createElement(Button, {\n    className: \"element p-1 m-1 border border-3-dark\",\n    onClick: function onClick() {\n      activeTab === \"Sets\" && clickHandler(content);\n      activeTab === \"Types\" && clickHandler(getFaqsByType(content.name));\n      activeTab === \"Tags\" && clickHandler(getFaqsByTag(content.id));\n    },\n    style: {\n      background: activeOption.name.toLowerCase() === content.name.toLowerCase() ? \"#343a40\" : \"white\",\n      color: activeOption.name.toLowerCase() === content.name.toLowerCase() ? \"white\" : \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: activeOption.name === content.name ? \"light\" : \"dark\",\n    className: \"element m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, content.faqs && content.faqs.length, content.total && content.total), content.name);\n}","map":{"version":3,"sources":["/home/marek/VSCode/react-full-stack-faqs/src/components/OptionCard.js"],"names":["React","Badge","Button","getFaqsByTag","getFaqsByType","determineSelected","active","current","isSelected","name","OptionCard","content","clickHandler","activeOption","activeTab","id","background","toLowerCase","color","faqs","length","total"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;AAEA,OAAO,eAAP;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAASC,OAAT,EAAqB;AAC7C,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIF,MAAM,CAACG,IAAP,KAAgBF,OAAO,CAACE,IAA5B,EAAkCD,UAAU,GAAG,IAAb;AAEnC,CAJD;;AAKA,eAAe,SAASE,UAAT,OAKZ;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,SACC,QADDA,SACC;AACD,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbA,MAAAA,SAAS,KAAK,MAAd,IAAwBF,YAAY,CAACD,OAAD,CAApC;AACAG,MAAAA,SAAS,KAAK,OAAd,IAAyBF,YAAY,CAACR,aAAa,CAACO,OAAO,CAACF,IAAT,CAAd,CAArC;AACAK,MAAAA,SAAS,KAAK,MAAd,IAAwBF,YAAY,CAACT,YAAY,CAACQ,OAAO,CAACI,EAAT,CAAb,CAApC;AAAgE,KALpE;AAME,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEH,YAAY,CAACJ,IAAb,CAAkBQ,WAAlB,OAAoCN,OAAO,CAACF,IAAR,CAAaQ,WAAb,EAApC,GAAiE,SAAjE,GAA6E,OADpF;AAELC,MAAAA,KAAK,EAAEL,YAAY,CAACJ,IAAb,CAAkBQ,WAAlB,OAAoCN,OAAO,CAACF,IAAR,CAAaQ,WAAb,EAApC,GAAiE,OAAjE,GAA2E;AAF7E,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEJ,YAAY,CAACJ,IAAb,KAAsBE,OAAO,CAACF,IAA9B,GAAqC,OAArC,GAA+C,MADxD;AAEE,IAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGE,OAAO,CAACQ,IAAR,IAAgBR,OAAO,CAACQ,IAAR,CAAaC,MAJhC,EAKGT,OAAO,CAACU,KAAR,IAAiBV,OAAO,CAACU,KAL5B,CAXF,EAkBGV,OAAO,CAACF,IAlBX,CADF;AAsBD","sourcesContent":["import React from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport { getFaqsByTag, getFaqsByType } from \"../helpers/faqsHelper\";\r\n\r\nimport \"../styles.css\";\r\nconst determineSelected = (active, current) => {\r\n  let isSelected = false;\r\n  if (active.name === current.name) isSelected = true;\r\n\r\n}\r\nexport default function OptionCard({\r\n  content,\r\n  clickHandler,\r\n  activeOption,\r\n  activeTab,\r\n}) {\r\n  return (\r\n    <Button\r\n      className=\"element p-1 m-1 border border-3-dark\"\r\n      onClick={() => {\r\n        activeTab === \"Sets\" && clickHandler(content)\r\n        activeTab === \"Types\" && clickHandler(getFaqsByType(content.name))\r\n        activeTab === \"Tags\" && clickHandler(getFaqsByTag(content.id)) }}\r\n      style={{\r\n        background: activeOption.name.toLowerCase() === content.name.toLowerCase() ? \"#343a40\" : \"white\",\r\n        color: activeOption.name.toLowerCase() === content.name.toLowerCase() ? \"white\" : \"black\"\r\n      }}\r\n    >\r\n      <Badge\r\n        color={activeOption.name === content.name ? \"light\" : \"dark\"}\r\n        className=\"element m-1\"\r\n      >\r\n        {content.faqs && content.faqs.length}\r\n        {content.total && content.total}\r\n      </Badge>\r\n      {content.name}\r\n    </Button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}